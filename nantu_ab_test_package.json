{
    "exportFormatVersion": 2,
    "exportTime": "2023-10-18 13:08:20",
    "containerVersion": {
        "path": "accounts/6098026418/containers/115676190/versions/0",
        "accountId": "6098026418",
        "containerId": "115676190",
        "containerVersionId": "0",
        "container": {
            "path": "accounts/6098026418/containers/115676190",
            "accountId": "6098026418",
            "containerId": "115676190",
            "name": "nantu.app",
            "publicId": "GTM-KQR8W86",
            "usageContext": [
                "WEB"
            ],
            "fingerprint": "1691766812264",
            "tagManagerUrl": "https://tagmanager.google.com/#/container/accounts/6098026418/containers/115676190/workspaces?apiLink=container",
            "features": {
                "supportUserPermissions": true,
                "supportEnvironments": true,
                "supportWorkspaces": true,
                "supportGtagConfigs": false,
                "supportBuiltInVariables": true,
                "supportClients": false,
                "supportFolders": true,
                "supportTags": true,
                "supportTemplates": true,
                "supportTriggers": true,
                "supportVariables": true,
                "supportVersions": true,
                "supportZones": true,
                "supportTransformations": false
            },
            "tagIds": [
                "GTM-KQR8W86"
            ]
        },
        "tag": [
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "tagId": "11",
                "name": "Nantu Environment Variables",
                "type": "html",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "html",
                        "value": "<script>\n// Description: Environment Variables detection for A/B testing framework.\n// Author: Juan Castro\n// Last modified: 2023-07-25\n// License: Apache 2.0\n// Version: 1.0.0\n\n\nwindow.nantu_device = \"unknown\";\nwindow.nantu_browser_type = \"unknown\";\nwindow.nantu_browser = \"unknown\";\nwindow.nantu_browser_version = 0;\n\n\n// Detect device, browser, browser type and browser version\nvar nantuBrowserData = nantuDetectBrowser(navigator.userAgent);\n\nif (nantuBrowserData) {\n\twindow.nantu_device = nantuBrowserData.device;\n\twindow.nantu_browser_type = nantuBrowserData.browserType;\n\twindow.nantu_browser = nantuBrowserData.browser;\n\twindow.nantu_browser_version = nantuBrowserData.version;\n}\n\n\n// Check if source, medium and campaign are already set in localStorage\nif (localStorage.getItem('nantu_source')) {\n\twindow.nantu_source = localStorage.getItem('nantu_source');\n\twindow.nantu_medium = localStorage.getItem('nantu_medium');\n\twindow.nantu_campaign = localStorage.getItem('nantu_campaign');\n}\n\nvar nantuURL = new URL(window.location.href);\n\n// if source, medium and campaign are set in the URL, set them in localStorage\nif ( ! localStorage.getItem('nantu_source') || nantuURL.searchParams.get(\"utm_source\") || nantuURL.searchParams.get(\"utm_medium\") || nantuURL.searchParams.get(\"gclid\") || nantuURL.searchParams.get(\"fbclid\") || nantuURL.searchParams.get('msclkid')) {\n\tvar nantuSourceData = nantuGetSourceMedium();\n\n\tif (nantuSourceData) {\n\t\tlocalStorage.setItem('nantu_source', nantuSourceData.source);\n\t\tlocalStorage.setItem('nantu_medium', nantuSourceData.medium);\n\t\tlocalStorage.setItem('nantu_campaign', nantuSourceData.campaign);\n\n\t\twindow.nantu_source = nantuSourceData.source;\n\t\twindow.nantu_medium = nantuSourceData.medium;\n\t\twindow.nantu_campaign = nantuSourceData.campaign;\n\t}\n}\n\nwindow.dataLayer.push({event: 'nantu_page_view'});\n\n/*--include:detectors.js:--*/\n// Description: Device detection for A/B testing framework.\n// Author: Juan Castro\n// Last modified: 2023-07-25\n// License: Apache 2.0\n// Version: 1.0.0\n\nfunction nantuDetectBrowser(userAgent) {\n\tvar safariData = nantuIsSafariBrowser(userAgent);\n\n\tif (safariData) {\n\t\treturn safariData;\n\t}\n\n\tvar desktopBrowserData = nantuGetBrowser(userAgent);\n\n\tif (desktopBrowserData) {\n\t\treturn desktopBrowserData;\n\t}\n\n\treturn {device: \"unknown\", browser: \"unknown\", browserType: \"unknown\", version: 0};\n}\n\nfunction nantuIsSafariBrowser(userAgent) {\n\tvar isSafari = false;\n\n\tvar isDesktop = false;\n\tvar isMobile = false;\n\tvar isTabvar = false;\n\n\tvar supportedApplePlatforms = ['Macintosh', 'iPhone', 'iPad'];\n\n\tvar platformIndex = -1;\n\n\tfor (var i = 0; i < supportedApplePlatforms.length; i++) {\n\t\tvar platform = supportedApplePlatforms[i];\n\n\t\tif (userAgent.indexOf(platform) > -1) {\n\t\t\tif (platform === 'iPad') {\n\t\t\t\tisTabvar = true;\n\t\t\t}\n\t\t\tif (platform === 'Macintosh') {\n\t\t\t\tisDesktop = true;\n\t\t\t}\n\t\t\tif (platform === 'iPhone') {\n\t\t\t\tisMobile = true;\n\t\t\t}\n\n\t\t\tplatformIndex = userAgent.indexOf(platform);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tvar safariVersionRegex = /Version\\/[0-9]+/;\n\n\tif (platformIndex > -1) {\n\t\tif (safariVersionRegex.test(userAgent.slice(platformIndex))) {\n\t\t\tvar safariVersion = parseInt(userAgent.slice(platformIndex).match(safariVersionRegex)[0].split('/')[1]);\n\n\t\t\tif (safariVersion > 0) {\n\t\t\t\treturn {device: isDesktop ? 'desktop' : isMobile ? 'mobile' : isTabvar ? 'tablet' : null, browserType: 'safari', browser: 'safari', version: safariVersion};\n\t\t\t}\n\t\t}\n\t}\n\n\tvar chromeIosVersionRegex = /CriOS\\/[0-9]+/;\n\n\tif (chromeIosVersionRegex.test(userAgent)) {\n\t\tvar chromeIosVersion = parseInt(userAgent.match(chromeIosVersionRegex)[0].split('/')[1]);\n\n\t\tif (chromeIosVersion > 0) {\n\t\t\treturn {device: isDesktop ? 'desktop' : isMobile ? 'mobile' : isTabvar ? 'tablet' : null, browserType: 'safari', browser: 'chrome', version: chromeIosVersion};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction nantuGetBrowser(userAgent) {\n\tvar supportedPlatforms = ['Linux x86_64', 'Mac OS', 'Windows NT', 'CrOS', 'Android'];\n\tvar supportedBrowsers = [\n\t\t{\n\t\t\tname: 'Chrome',\n\t\t\tversionRegex: 'OPR/'\n\t\t},\n\t\t{\n\t\t\tname: 'Firefox',\n\t\t\tversionRegex: 'Firefox/'\n\t\t},\n\t\t{\n\t\t\tname: 'Chrome',\n\t\t\tversionRegex: 'Chrome/'\n\t\t},\n\t];\n\n\tvar platformIndex = -1;\n\n\tvar deviceType = \"desktop\";\n\n\tfor (var i = 0; i < supportedPlatforms.length; i++) {\n\t\tvar platform = supportedPlatforms[i];\n\n\t\tif (userAgent.indexOf(platform) > -1) {\n\t\t\tif (platform === 'Android') { \n\t\t\t\tif (userAgent.indexOf('Mobile') > -1) {\n\t\t\t\t\tdeviceType = \"mobile\";\n\t\t\t\t} else {\n\t\t\t\t\tdeviceType = \"tablet\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var j = 0; j < supportedBrowsers.length; j++) {\n\t\t\t\tvar browser = supportedBrowsers[j];\n\n\t\t\t\tif (userAgent.indexOf(browser.name) > -1) {\n\n\t\t\t\t\tvar versionRegex = new RegExp(browser.versionRegex.replace('/', '\\\\/') + '[0-9]+');\n\n\t\t\t\t\tif (versionRegex.test(userAgent)) {\n\t\t\t\t\t\tvar browserVersion = parseInt(userAgent.slice(userAgent.indexOf(browser.name)).match(versionRegex)[0].split('/')[1]);\n\n\t\t\t\t\t\tif (browserVersion > 0) {\n\t\t\t\t\t\t\tvar browserType = browser.name.toLowerCase();\n\n\t\t\t\t\t\t\tvar browserName = browserType;\n\n\t\t\t\t\t\t\tif (userAgent.indexOf('Edg/') > -1) {\n\t\t\t\t\t\t\t\tbrowserName = 'edge';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (userAgent.indexOf('OPR/') > -1) {\n\t\t\t\t\t\t\t\tbrowserName = 'opera';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn {device: deviceType, browserType: browserType, browser: browserName, version: browserVersion};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/*--includeend--*/\n/*--include:helpers.js:--*/\n// Description: Helpers for A/B testing framework.\n// Author: Juan Castro\n// Last modified: 2023-07-25\n// License: Apache 2.0\n// Version: 1.0.0\n\nfunction nantuCleanString(text) {\n\treturn text.replace(/[^a-z0-9._-]/gi, \"\").substr(0, 50);\n}\n\nfunction nantuGetHost(referrer) {\n\ttry {\n\t\treturn new URL(referrer).hostname.replace('www.', '').split('.')[0];\n\t}\n\tcatch(err)\n\t{\n\t\tconsole.error(err);\n\t}\n\n\treturn \"unknown\";\n}\n\nfunction nantuGetSourceMedium() {\n\n\tvar source = \"direct\";\n\tvar medium = \"none\";\n\tvar campaign = \"none\";\n\n\tvar searchEngineRegex = /(.*google\\..*)|(duckduckgo\\.com)|(.*bing\\.com)|(baidu\\..*)|(yandex\\..*)|(yahoo\\.com)/;\n\tvar searchEngineNameRegex = /(google|duckduckgo|bing|baidu|yandex|yahoo)/;\n\n\n\tvar url = new URL(window.location.href);\n\n\tif(url.searchParams.get(\"utm_source\") || url.searchParams.get(\"utm_medium\")) {\n\t\tif(url.searchParams.get(\"utm_source\")) {\n\t\t\tsource = url.searchParams.get(\"utm_source\");\n\t\t}\n\n\t\tif(url.searchParams.get(\"utm_medium\")) {\n\t\t\tmedium = url.searchParams.get(\"utm_medium\");\n\t\t}\n\t} else if(url.searchParams.get(\"gclid\")) {\n\t\tsource = \"google\";\n\t\tmedium = \"cpc\";\n\t} else if(url.searchParams.get(\"fbclid\")) {\n\t\tsource = \"facebook\";\n\t\tmedium = \"cpc\";\n\t} else if(url.searchParams.get(\"msclkid\")) {\n\t\tsource = \"bing\";\n\t\tmedium = \"cpc\";\n\t} else if(searchEngineRegex.test(document.referrer)) {\n\t\tsource = document.referrer.match(searchEngineNameRegex)[0];\n\n\t\tmedium = \"organic\";\n\t} else if(document.referrer !== '') {\n\n\t\tvar referrer = new URL(document.referrer);\n\n\t\tif (referrer.hostname !== window.location.hostname) {\n\t\t\tmedium = \"referral\";\n\t\t}\n\t}\n\n\tif(url.searchParams.get(\"utm_campaign\"))\n\t{\n\t\tcampaign = url.searchParams.get(\"utm_campaign\");\n\t}\n\n\treturn {source: source, medium: medium, campaign: campaign};\n}\n\nfunction nantuGetTotalElements(selector) {\n\treturn document.querySelectorAll(selector).length;\n}\n/*--includeend--*/\n</script>\n\n"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "supportDocumentWrite",
                        "value": "false"
                    }
                ],
                "fingerprint": "1691767393522",
                "firingTriggerId": [
                    "2147479553"
                ],
                "parentFolderId": "29",
                "tagFiringOption": "ONCE_PER_EVENT",
                "monitoringMetadata": {
                    "type": "MAP"
                },
                "consentSettings": {
                    "consentStatus": "NEEDED",
                    "consentType": {
                        "type": "LIST",
                        "list": [
                            {
                                "type": "TEMPLATE",
                                "value": "ad_storage"
                            },
                            {
                                "type": "TEMPLATE",
                                "value": "analytics_storage"
                            }
                        ]
                    }
                }
            },
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "tagId": "28",
                "name": "Nantu QA Tab",
                "type": "html",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "html",
                        "value": "<script>\n// Description: QA Tab for Nantu AB Testing.\n// Author: Juan Castro\n// Last modified: 2023-08-02\n// License: Apache 2.0\n// Version: 1.0.0\n\n\nvar nantu_qa_tab_html = '<div id=\"nantu_qa_tab\" style=\"position: fixed;min-height: 30px;min-width: 50px;top: 50%;padding: 8px;right: 0;background: white;box-shadow: 2px 2px 5px #333;border-radius: 8px 0 0 8px; z-index: 10000000000;\"><span style=\"display:block;font-size:11px;text-align:center; font-family:sans-serif;\">Nantu Tests</span></div>';\n\n\nif(document.querySelectorAll(\"#nantu_qa_tab\").length == 0)\n{\n\tdocument.body.insertAdjacentHTML(\"beforeEnd\", nantu_qa_tab_html);\n}\n\nfunction nantu_qa_show_test(test_id, variation, version, variations, dimension) {\n\tvar nantu_qa_abbrev_regex = /(ontrol|ariation)/;\n\n\tif(document.querySelectorAll(\"#nantu_qa_tab\").length == 0) {\n\t\tdocument.body.insertAdjacentHTML(\"beforeEnd\", nantu_qa_tab_html);\n\t}\n\n\tdocument.querySelector(\"#nantu_qa_tab > span:first-child\").innerHTML = '<a href=\"javascript:window.nantu_qa_edit()\" style=\"padding: 6px; background: #666; color: white; text-decoration: none; border-radius: 4px; display: block; margin-bottom: 4px; font-size: 10px;\">Edit Variations</a>';\n\n\tif(document.querySelectorAll(\"#nantu_\" + test_id + \"_tab_line\").length == 0) {\n\t\tdocument.getElementById(\"nantu_qa_tab\").insertAdjacentHTML(\"beforeEnd\", '<span style=\"display: flex;font-size:11px;column-gap: 2px; align-items: center;\" id=\"nantu_' + test_id + '_tab_line\"><span class=\"nantu_qa_id\" style=\"font-weight:bold;\"></span><span class=\"nantu_qa_variation\"></span><span class=\"nantu_qa_dimension\"></span><span class=\"nantu_qa_dimension_links\" style=\"display:none; column-gap: 3px;\"></span></span>');\n\t}\n\n\tvar nantu_qa_button_style = 'style=\"display: flex; text-decoration: none; min-width: 40px;height: 30px;justify-content: center;align-items: center;font-size: 20px;background: #666;color: white;border-radius: 3px; padding: 0 4px;\"'; \n\n\tvar variations_list = variations.split(\",\");\n\n\tif(document.querySelectorAll(\"#nantu_\" + test_id + \"_tab_line > .nantu_qa_dimension_links > a\").length == 0) {\n\t\t// add buttons to change variations to QA tab\n\t\tfor(var i = 0; i < variations_list.length; i++) {\n\t\t\tvar this_variation = variations_list[i];\n\n\t\t\tvar short_variation = this_variation.replace(nantu_qa_abbrev_regex, \"\");\n\n\t\t\tdocument.querySelector(\"#nantu_\" + test_id + \"_tab_line > .nantu_qa_dimension_links\").insertAdjacentHTML(\"beforeEnd\", '<a href=\"javascript:void(0);\" onclick=\"window.nantu_qa_force_variation(' + test_id + ', \\'' + short_variation + '\\')\" ' + nantu_qa_button_style + '  >' + short_variation.toUpperCase() + '</a>');\n\t\t}\n\n\t\t// add button to turn off test\n\t\tdocument.querySelector(\"#nantu_\" + test_id + \"_tab_line > .nantu_qa_dimension_links\").insertAdjacentHTML(\"beforeEnd\", '<a href=\"javascript:void(0);\" onclick=\"window.nantu_qa_force_variation(' + test_id + ', \\'n\\')\" ' + nantu_qa_button_style + '  >OFF</a>');\n\t}\n\n\tdocument.querySelector(\"#nantu_\" + test_id + \"_tab_line > .nantu_qa_id\").innerText = test_id + \"-\" + version + \": \";\n\n\tvar nantu_qa_variation = variation.replace(nantu_qa_abbrev_regex, \"\").toUpperCase();\n\n\tdocument.querySelector(\"#nantu_\" + test_id + \"_tab_line > .nantu_qa_variation\").innerText = nantu_qa_variation;\n\n\tvar dimension_sent = \"\";\n\n\tif (dimension) {\n\t\tdimension_sent = \"✓\";\n\t}\n\n\tdocument.querySelector(\"#nantu_\" + test_id + \"_tab_line > .nantu_qa_dimension\").innerText = dimension_sent;\n}\n\nwindow.nantu_qa_edit = function()\n{\n\tdocument.querySelector(\"#nantu_qa_tab > span:first-child\").style.display = \"none\";\n\n\tvar nantu_qa_lines = document.querySelectorAll(\"span.nantu_qa_dimension_links[style*='none']\");\n\n\tfor(var nantu_qa_var_index = 0; nantu_qa_var_index < nantu_qa_lines.length; nantu_qa_var_index++)\n\t{\n\t\tnantu_qa_lines[nantu_qa_var_index].style.display = \"flex\";\n\n\t}\n}\n\nwindow.nantu_qa_force_variation = function(test_id, variation)\n{\n\tvar url = new URL(location.href);\n\n\turl.searchParams.set(\"nantu_variations\", \"variation_data\");\n\n\twindow.location = url.href.replace(\"variation_data\", test_id + \":\" + variation);\n}\n</script>\n"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "supportDocumentWrite",
                        "value": "false"
                    }
                ],
                "fingerprint": "1691767393523",
                "firingTriggerId": [
                    "26"
                ],
                "blockingTriggerId": [
                    "27"
                ],
                "parentFolderId": "30",
                "tagFiringOption": "ONCE_PER_EVENT",
                "monitoringMetadata": {
                    "type": "MAP"
                },
                "consentSettings": {
                    "consentStatus": "NEEDED",
                    "consentType": {
                        "type": "LIST",
                        "list": [
                            {
                                "type": "TEMPLATE",
                                "value": "ad_storage"
                            },
                            {
                                "type": "TEMPLATE",
                                "value": "analytics_storage"
                            }
                        ]
                    }
                }
            }
        ],
        "trigger": [
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "triggerId": "26",
                "name": "Nantu Mode QA",
                "type": "PAGEVIEW",
                "filter": [
                    {
                        "type": "CONTAINS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{Nantu Mode Cookie and Query}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "qa"
                            }
                        ]
                    }
                ],
                "fingerprint": "1691094635155",
                "parentFolderId": "30"
            },
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "triggerId": "27",
                "name": "Nantu Mode OFF",
                "type": "CUSTOM_EVENT",
                "customEventFilter": [
                    {
                        "type": "MATCH_REGEX",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{_event}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": ".*"
                            }
                        ]
                    }
                ],
                "filter": [
                    {
                        "type": "CONTAINS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{nantu_mode_query_var}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "off"
                            }
                        ]
                    }
                ],
                "fingerprint": "1691094635153",
                "parentFolderId": "30"
            }
        ],
        "variable": [
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "variableId": "18",
                "name": "nantu_variation",
                "type": "v",
                "parameter": [
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "nantu_variation"
                    }
                ],
                "fingerprint": "1691094635157",
                "parentFolderId": "30",
                "formatValue": {}
            },
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "variableId": "19",
                "name": "nantu_variation_name",
                "type": "v",
                "parameter": [
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "nantu_variation_name"
                    }
                ],
                "fingerprint": "1691094635177",
                "parentFolderId": "30",
                "formatValue": {}
            },
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "variableId": "20",
                "name": "nantu_test_id",
                "type": "v",
                "parameter": [
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "nantu_test_id"
                    }
                ],
                "fingerprint": "1691094635179",
                "parentFolderId": "30",
                "formatValue": {}
            },
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "variableId": "21",
                "name": "nantu_experiment",
                "type": "v",
                "parameter": [
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "nantu_experiment"
                    }
                ],
                "fingerprint": "1691094635175",
                "parentFolderId": "30",
                "formatValue": {}
            },
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "variableId": "22",
                "name": "nantu_mode_cookie",
                "type": "k",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "decodeCookie",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "nantu_mode"
                    }
                ],
                "fingerprint": "1691094635178",
                "parentFolderId": "30",
                "formatValue": {}
            },
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "variableId": "23",
                "name": "nantu_mode_query_var",
                "type": "u",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "component",
                        "value": "QUERY"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "queryKey",
                        "value": "nantu_mode"
                    }
                ],
                "fingerprint": "1691094635178",
                "parentFolderId": "30",
                "formatValue": {}
            },
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "variableId": "24",
                "name": "nantu_test_variations",
                "type": "v",
                "parameter": [
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "nantu_test_variations"
                    }
                ],
                "fingerprint": "1691094635156",
                "parentFolderId": "30",
                "formatValue": {}
            },
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "variableId": "25",
                "name": "Nantu Mode Cookie and Query",
                "type": "c",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "value",
                        "value": "{{nantu_mode_cookie}}{{nantu_mode_query_var}}"
                    }
                ],
                "fingerprint": "1691096189231",
                "parentFolderId": "30",
                "formatValue": {}
            }
        ],
        "folder": [
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "folderId": "29",
                "name": "Nantu Target Helper",
                "fingerprint": "1691072080495"
            },
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "folderId": "30",
                "name": "Nantu QA Tab",
                "fingerprint": "1691072635447"
            }
        ],
        "fingerprint": "1697634500050",
        "tagManagerUrl": "https://tagmanager.google.com/#/versions/accounts/6098026418/containers/115676190/versions/0?apiLink=version",
        "customTemplate": [
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "templateId": "4",
                "name": "Nantu A/B Test",
                "fingerprint": "1691375974648",
                "templateData": "___INFO___\n\n{\n  \"type\": \"TAG\",\n  \"id\": \"cvt_temp_public_id\",\n  \"version\": 1,\n  \"securityGroups\": [],\n  \"displayName\": \"Nantu A/B Test\",\n  \"brand\": {\n    \"id\": \"brand_dummy\",\n    \"displayName\": \"\"\n  },\n  \"description\": \"\",\n  \"containerContexts\": [\n    \"WEB\"\n  ]\n}\n\n\n___TEMPLATE_PARAMETERS___\n\n[\n  {\n    \"type\": \"CHECKBOX\",\n    \"name\": \"qaOnly\",\n    \"checkboxText\": \"QA Only\",\n    \"simpleValueType\": true,\n    \"defaultValue\": true,\n    \"help\": \"If this is enabled the test will appear only if nantu_mode\\u003dqa query var has been used\",\n    \"alwaysInSummary\": true\n  },\n  {\n    \"type\": \"TEXT\",\n    \"name\": \"experimentName\",\n    \"displayName\": \"Experiment Name\",\n    \"simpleValueType\": true,\n    \"valueValidators\": [\n      {\n        \"type\": \"NON_EMPTY\"\n      },\n      {\n        \"type\": \"REGEX\",\n        \"args\": [\n          \"^[a-zA-Z0-9\\\\s-]*$\"\n        ]\n      }\n    ]\n  },\n  {\n    \"type\": \"TEXT\",\n    \"name\": \"testIndex\",\n    \"displayName\": \"Test Index\",\n    \"simpleValueType\": true,\n    \"help\": \"Each A/B test needs a unique number\",\n    \"valueValidators\": [\n      {\n        \"type\": \"NON_EMPTY\"\n      },\n      {\n        \"type\": \"POSITIVE_NUMBER\"\n      }\n    ]\n  },\n  {\n    \"type\": \"GROUP\",\n    \"name\": \"testWindow\",\n    \"displayName\": \"Test Window\",\n    \"groupStyle\": \"NO_ZIPPY\",\n    \"subParams\": [\n      {\n        \"type\": \"CHECKBOX\",\n        \"name\": \"testWindowEnabled\",\n        \"checkboxText\": \"Enable Test Window\",\n        \"simpleValueType\": true,\n        \"defaultValue\": false\n      },\n      {\n        \"type\": \"TEXT\",\n        \"name\": \"testWindowStart\",\n        \"displayName\": \"Start Date\",\n        \"simpleValueType\": true,\n        \"enablingConditions\": [\n          {\n            \"paramName\": \"testWindowEnabled\",\n            \"paramValue\": true,\n            \"type\": \"EQUALS\"\n          }\n        ],\n        \"defaultValue\": \"07/18/2023\",\n        \"valueValidators\": [\n          {\n            \"type\": \"NON_EMPTY\"\n          },\n          {\n            \"type\": \"REGEX\",\n            \"args\": [\n              \"^[0-1]*[0-9]\\\\/[0-3]*[0-9]\\\\/[0-9]{4}$\"\n            ],\n            \"errorMessage\": \"Please enter a valid date\"\n          }\n        ]\n      },\n      {\n        \"type\": \"TEXT\",\n        \"name\": \"testWindowEnd\",\n        \"displayName\": \"End Date\",\n        \"simpleValueType\": true,\n        \"enablingConditions\": [\n          {\n            \"paramName\": \"testWindowEnabled\",\n            \"paramValue\": true,\n            \"type\": \"EQUALS\"\n          }\n        ],\n        \"defaultValue\": \"12/31/2026\",\n        \"valueValidators\": [\n          {\n            \"type\": \"NON_EMPTY\"\n          },\n          {\n            \"type\": \"REGEX\",\n            \"args\": [\n              \"^[0-1]*[0-9]\\\\/[0-3]*[0-9]\\\\/[0-9]{4}$\"\n            ],\n            \"errorMessage\": \"Please enter a valid date\"\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"type\": \"TEXT\",\n    \"name\": \"allowedDomain\",\n    \"displayName\": \"Domain\",\n    \"simpleValueType\": true,\n    \"valueHint\": \"www.example.com\",\n    \"valueValidators\": [\n      {\n        \"type\": \"NON_EMPTY\"\n      }\n    ],\n    \"help\": \"Domain where the A/B Test will run\"\n  },\n  {\n    \"type\": \"PARAM_TABLE\",\n    \"name\": \"variations\",\n    \"displayName\": \"Variations\",\n    \"paramTableColumns\": [\n      {\n        \"param\": {\n          \"type\": \"TEXT\",\n          \"name\": \"id\",\n          \"displayName\": \"ID\",\n          \"simpleValueType\": true,\n          \"valueHint\": \"control or variation1 or variation2, etc\",\n          \"valueValidators\": [\n            {\n              \"type\": \"NON_EMPTY\"\n            },\n            {\n              \"type\": \"REGEX\",\n              \"args\": [\n                \"^(control|variation[1-9]+[0-9]*)$\"\n              ]\n            }\n          ]\n        },\n        \"isUnique\": true\n      },\n      {\n        \"param\": {\n          \"type\": \"TEXT\",\n          \"name\": \"name\",\n          \"displayName\": \"Name\",\n          \"simpleValueType\": true,\n          \"valueHint\": \"Control or Variation #\",\n          \"valueValidators\": [\n            {\n              \"type\": \"NON_EMPTY\"\n            },\n            {\n              \"type\": \"REGEX\",\n              \"args\": [\n                \"^[a-zA-Z0-9\\\\s-]*$\"\n              ]\n            }\n          ]\n        },\n        \"isUnique\": true\n      },\n      {\n        \"param\": {\n          \"type\": \"TEXT\",\n          \"name\": \"weight\",\n          \"displayName\": \"Weight\",\n          \"simpleValueType\": true,\n          \"defaultValue\": 50,\n          \"valueValidators\": [\n            {\n              \"type\": \"NON_EMPTY\"\n            },\n            {\n              \"type\": \"NON_NEGATIVE_NUMBER\"\n            }\n          ]\n        },\n        \"isUnique\": false\n      }\n    ],\n    \"newRowButtonText\": \"Add New Variation\",\n    \"valueValidators\": [\n      {\n        \"type\": \"NON_EMPTY\"\n      }\n    ]\n  }\n]\n\n\n___SANDBOXED_JS_FOR_WEB_TEMPLATE___\n\n// Description: Nantu A/B Testing Template\n// Author: Juan Castro\n// Last modified: 2023-08-02\n// License: Apache 2.0\n// Version: 1.0.0\n\n// API imports\nconst Math = require('Math');\nconst log = require('logToConsole');\nconst queryPermission = require('queryPermission');\nconst localStorage = require('localStorage');\nconst generateRandom = require('generateRandom');\nconst getCookieValues = require('getCookieValues');\nconst getUrl = require('getUrl');\nconst setCookie = require('setCookie');\nconst createQueue = require('createQueue');\nconst getType = require('getType');\nconst getTimestampMillis = require('getTimestampMillis');\nconst decode = require('decodeUriComponent');\n\n// Constants\nconst nantuModeCookieName = 'nantu_mode';\nconst nantuModeQueryVariableName = 'nantu_mode';\nconst nantuVersion = '1.0.0';\nconst nantuVariationsQueryName = 'nantu_variations';\n\nif (isNantuOff()) {\n\tlog(\"Nantu is off\");\n\tdata.gtmOnSuccess();\n\treturn;\n}\n\nif (hasQAQuery()) {\n\tlog(\"QA mode is on, setting QA cookie\");\n\tsetQAModeCookie();\n}\n\ntestLog(\"Nantu Version: \" + nantuVersion);\n\n/* Get Permissions*/\n// localStorage Permissions\nconst nantuTestsKey = 'nantu_tests';\nlet savedNantuTests = \"[]\";\nif (queryPermission('access_local_storage', 'readwrite', nantuTestsKey)) {\n\tsavedNantuTests = localStorage.getItem(nantuTestsKey);\n} else {\n\tlog(\"Nantu can't access local storage\");\n\tdata.gtmOnFailure();\n\treturn;\n}\n\nvar domain = \"unset\";\n\n// URL Permissions\nif (queryPermission('get_url', 'host')) {\n\tdomain = getUrl('host');\n}\n\nif (domain === \"unset\") {\n\tlog(\"Nantu can't get the domain:\" + domain);\n\tdata.gtmOnSuccess();\n\treturn;\n}\n\nif (! isAllowedDomain(domain, data)) {\n\tlog(\"Nantu test is not allowed on this domain: \" + domain);\n\tdata.gtmOnSuccess();\n\treturn;\n}\n\nif (data.testWindowEnabled === true) {\n\tconst gaTimestamp = getGACookieTimestamp();\n\n\tconst getGADays = Math.floor(gaTimestamp / 86400);\n\n\tconst getStartDays = getDaysFrom1970(data.testWindowStart);\n\tconst getEndDays = getDaysFrom1970(data.testWindowEnd);\n\n\tif ( ! (getGADays >= getStartDays && getGADays <= getEndDays)) {\n\t\ttestLog(\"Nantu test is not running. First visit timestamp:\" + gaTimestamp);\n\t\tdata.gtmOnSuccess();\n\t\treturn;\n\t}\n}\n\nvar nantuTests = parseTestsVariations(savedNantuTests);\n\nconst variationFromURL = getVariationFromURL();\n\nvar selectedVariation = getSelectedVariation(nantuTests, data);\n\nif (variationFromURL !== null) {\n\tselectedVariation = variationFromURL;\n\n\tnantuTests = setTestVariation(nantuTests, data.testIndex, selectedVariation);\n\n\tlocalStorage.setItem(nantuTestsKey, serializeTestsVariations(nantuTests));\n\ttestLog(\"Forcing Variation: \" + selectedVariation);\n}\n\nif (selectedVariation == \"unset\") {\n\tselectedVariation = selectRandomVariation(data);\n\n\tnantuTests = setTestVariation(nantuTests, data.testIndex, selectedVariation);\n\n\tlocalStorage.setItem(nantuTestsKey, serializeTestsVariations(nantuTests));\n\ttestLog(\"Setting Variation: \" + selectedVariation);\n}\n\nvar testVariations = [];\n\nfor (let variationIndex = 0; variationIndex < data.variations.length; variationIndex++) {\n\tconst variation = data.variations[variationIndex];\n\n\ttestVariations.push(variation.id);\n}\n\nconst dataLayerPush = createQueue('dataLayer');\n\nif (data.qaOnly === false || data.qaOnly === true && isInQAMode()) {\n\tdataLayerPush({'event': 'nantu_' + data.testIndex + '_execute_' + selectedVariation, 'nantu_test_id' : data.testIndex, 'nantu_variation' : selectedVariation, 'nantu_experiment' : data.experimentName, 'nantu_variation_name' : getVariationName(selectedVariation, data), 'nantu_test_variations' : testVariations.join(\",\")});\n}\n\nfunction getVariationFromURL() {\n\tif (queryPermission('get_url', 'query')) {\n\t\tconst nantuVariationsQuery = decode(getUrl('query'));\n\n\t\tconst nantuVariationsIndex = nantuVariationsQuery.indexOf(nantuVariationsQueryName);\n\n\t\tif (nantuVariationsIndex > -1) {\n\t\t\tconst nantuVariationsQueryValue = nantuVariationsQuery.slice(nantuVariationsIndex + nantuVariationsQueryName.length + 1);\n\n\t\t\tconst nantuVariationsQueryValueEnd = nantuVariationsQueryValue.indexOf('&');\n\n\t\t\tvar variationsValues = \"\";\n\n\t\t\tif (nantuVariationsQueryValueEnd > -1) {\n\t\t\t\tvariationsValues = nantuVariationsQueryValue.slice(0, nantuVariationsQueryValueEnd);\n\t\t\t} else {\n\t\t\t\tvariationsValues = nantuVariationsQueryValue;\n\t\t\t}\n\n\t\t\tconst queryVariations = parseTestsVariations(\"[\" + variationsValues + \"]\");\n\n\t\t\tfor (let variationIndex = 0; variationIndex < queryVariations.length; variationIndex++) {\n\t\t\t\tconst variation = queryVariations[variationIndex];\n\n\t\t\t\tif (variation.id == data.testIndex) {\n\t\t\t\t\treturn variation.variation;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/*--include:helpers/helpers.js:--*/\n// Description: Helper functions for the A/B testing framework.\n// Author: Juan Castro\n// Last modified: 2023-05-26\n// License: Apache 2.0\n// Version: 1.0.0\n// Path: helpers.js\n\n// shortName converts a variation long name to a short name.\nfunction shortName(variationLongName) {\n\tif ( ! variationLongName ) {\n\t\treturn \"u\";\n\t}\n\n\tif (variationLongName === \"control\") {\n\t\treturn \"c\";\n\t} else if (variationLongName === \"none\") {\n\t\treturn \"n\";\n\t} else if (variationLongName.indexOf(\"variation\") === 0 && variationLongName.length >= 10) {\n\t\tconst variationNumber = variationLongName.slice(9);\n\t\tif (strToInt(variationNumber) > 0) {\n\t\t\treturn \"v\" + variationNumber;\n\t\t} else {\n\t\t\treturn \"u\";\n\t\t}\n\t} else {\n\t\treturn \"u\";\n\t}\n}\n\n// longName converts a variation short name to a long name.\nfunction longName(variationShortName) {\n\tif ( ! variationShortName ) {\n\t\treturn \"unset\";\n\t}\n\n\tif (variationShortName === \"c\") {\n\t\treturn \"control\";\n\t} else if (variationShortName === \"n\") {\n\t\treturn \"none\";\n\t} else if (variationShortName.indexOf(\"v\") === 0 && variationShortName.length >= 2) {\n\t\tconst variationNumber = variationShortName.slice(1);\n\t\tif (strToInt(variationNumber) > 0) {\n\t\t\treturn \"variation\" + variationNumber;\n\t\t} else {\n\t\t\treturn \"unset\";\n\t\t}\n\t} else {\n\t\treturn \"unset\";\n\t}\n}\n\n// strToInt converts a string to an integer. If the string is not a number, it returns null.\nfunction strToInt(num)\n{\n\tif(getType(num) == \"number\")\n\t{\n\t\treturn num;\n\t}\n\n\tlet total_value = 0;\n\n\tif(num) {\n\t\tfor(let char_index = 0; char_index < num.length; char_index++) {\n\t\t\tlet digit_value = 0;\n\t\t\tlet current_letter = num.charAt(char_index);\n\n\t\t\tif(current_letter === \"1\") {\n\t\t\t\tdigit_value = 1;\n\t\t\t}\n\t\t\telse if (current_letter === \"2\") {\n\t\t\t\tdigit_value = 2;\n\t\t\t}\n\t\t\telse if (current_letter === \"3\") {\n\t\t\t\tdigit_value = 3;\n\t\t\t}\n\t\t\telse if (current_letter === \"4\") {\n\t\t\t\tdigit_value = 4;\n\t\t\t}\n\t\t\telse if (current_letter === \"5\") {\n\t\t\t\tdigit_value = 5;\n\t\t\t}\n\t\t\telse if (current_letter === \"6\") {\n\t\t\t\tdigit_value = 6;\n\t\t\t}\n\t\t\telse if (current_letter === \"7\") {\n\t\t\t\tdigit_value = 7;\n\t\t\t}\n\t\t\telse if (current_letter === \"8\") {\n\t\t\t\tdigit_value = 8;\n\t\t\t}\n\t\t\telse if (current_letter === \"9\") {\n\t\t\t\tdigit_value = 9;\n\t\t\t}\n\t\t\telse if (current_letter !== \"0\") {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\ttotal_value += digit_value * Math.pow(10, num.length - char_index - 1);\n\t\t}\n\t} else {\n\t\treturn null;\n\t}\n\n\treturn total_value;\n}\n\n// parseTestsVariations parses a string of tests variations into an array of objects.\n// [123:v1,456:v2,789:v3,345:u,678:n] => [{id: 123, variation: variation}, {id: 456, variation: variation2}, {id: 789, variation: variation3}, {id: 345, variation: unset}, {id: 678, variation: none}]\nfunction parseTestsVariations(testsVariations) {\n\n\tif ( ! testsVariations ) {\n\t\treturn [];\n\t}\n\n\t// Split the string into an array of key-value pairs.\n\tconst pairs = testsVariations.slice(1, -1).split(',');\n\n\tconst results = [];\n\n\tconst firstChar = testsVariations.slice(0, 1);\n\tconst lastChar = testsVariations.slice(-1);\n\n\tif (firstChar !== \"[\" || lastChar !== \"]\") {\n\t\treturn results;\n\t}\n\n\tfor (const pair of pairs) {\n\t\tconst keyValue = pair.split(':');\n\n\t\tconst key = strToInt(keyValue[0]);\n\t\tconst value = longName(keyValue[1]);\n\n\t\tif (key > 0) {\n\t\t\tconst result = {\n\t\t\t\tid: key,\n\t\t\t\tvariation: value\n\t\t\t};\n\t\t\tresults.push(result);\n\t\t}\n\t}\n\n\treturn results;\n}\n\n// serializeTestsVariations serializes an array of tests variations into a string.\n// [{id: 123, variation: variation}, {id: 456, variation: variation2}, {id: 789, variation: variation3}, {id: 345, variation: unset}, {id: 678, variation: none}] => [123:v1,456:v2,789:v3,345:u,678:n]\nfunction serializeTestsVariations(testsVariations) {\n\tconst pairs = [];\n\n\tfor (const testVariation of testsVariations) {\n\t\tconst pair = testVariation.id + \":\" + shortName(testVariation.variation);\n\t\tpairs.push(pair);\n\t}\n\n\treturn \"[\" + pairs.join(',') + \"]\";\n}\n\nfunction setTestVariation(testsVariations, testId, variation) {\n\tconst testVariation = {\n\t\tid: testId,\n\t\tvariation: variation\n\t};\n\n\tconst newTestsVariations = [];\n\n\tlet found = false;\n\n\tfor (const currentTestVariation of testsVariations) {\n\t\tif (currentTestVariation.id == testId) {\n\t\t\tnewTestsVariations.push(testVariation);\n\t\t\tfound = true;\n\t\t} else {\n\t\t\tnewTestsVariations.push(currentTestVariation);\n\t\t}\n\t}\n\n\tif ( ! found ) {\n\t\tnewTestsVariations.push(testVariation);\n\t}\n\n\treturn newTestsVariations;\n}\n\n// check if the user is in Nantu off mode\n// Nantu off mode is set using a cookie or the query parameter nantu_mode=off\nfunction isNantuOff() {\n\tif (queryPermission('get_url', 'query')) {\n\t\tconst nantuModeQuery = getUrl('query');\n\n\t\tif (nantuModeQuery.indexOf(nantuModeQueryVariableName + \"=off\") !== -1) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n\nfunction getGACookieTimestamp() {\n\n\tconst GACookieName = \"_ga\";\n\n\tif (queryPermission('get_cookies', GACookieName)) {\n\t\tconst gaCookieValue = getCookieValues(GACookieName).join('');\n\n\t\tconst cookieParts = gaCookieValue.split(\".\");\n\n\t\tconst gaTimestamp = strToInt(cookieParts[cookieParts.length - 1]);\n\n\t\tif(gaTimestamp > 0)\n\t\t{\n\t\t\treturn gaTimestamp;\n\t\t}\n\n\t} else {\n\t\treturn 0;\n\t}\n\t\n\treturn Math.floor(getTimestampMillis()/1000);\n}\n\n//Check if the user is in QA mode\n//QA Mode is set using a cookie or the query parameter nantu_mode=qa\nfunction isInQAMode() {\n\tif (queryPermission('get_cookies', nantuModeCookieName)) {\n\t\tconst nantuModeCookie = getCookieValues(nantuModeCookieName).join('');\n\n\t\tif (nantuModeCookie === \"qa\" || hasQAQuery()) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction hasQAQuery() {\n\tif (queryPermission('get_url', 'query')) {\n\t\tconst nantuModeQuery = getUrl('query');\n\n\t\tif (nantuModeQuery.indexOf(nantuModeQueryVariableName + \"=qa\") !== -1) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n//set the QA mode cookie\nfunction setQAModeCookie() {\n\t// Set Cookie Permissions\n\tconst options = {\n\t\t'domain': 'auto',\n\t\t'path': '/',\n\t\t'max-age': 60*60,\n\t\t'secure': true\n\t};\n\n\tif (queryPermission('set_cookies', nantuModeCookieName, options)) {\n\t\tsetCookie(nantuModeCookieName, 'qa', options);\n\t}\n}\n\n// display log messages in the console if nantu is in QA mode, also include the test index\nfunction testLog(message1, message2) {\n\tif (isInQAMode()) {\n\t\tlog(\"Nantu Test \" + data.testIndex + \": \" + message1, message2);\n\t}\n}\n\nfunction getNumberAfterString(text, string) {\n\tconst index = text.indexOf(string);\n\n\tif (index !== -1) {\n\t\tlet startOfNumberIndex = index + string.length;\n\t\tlet endOfNumberIndex = startOfNumberIndex;\n\t\twhile (endOfNumberIndex < text.length) {\n\t\t\tif (strToInt(text[endOfNumberIndex]) !== null) {\n\t\t\t\tendOfNumberIndex++;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst number = text.slice(startOfNumberIndex, endOfNumberIndex);\n\n\t\treturn strToInt(number);\n\t}\n\n\treturn null;\n}\n\nfunction isAllowedDomain(domain, testData) {\n\tif (testData.allowedDomain === domain) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction getSelectedVariation(savedVariations, testData) {\n\tfor (const savedVariation of savedVariations) {\n\t\tif (savedVariation.id === strToInt(testData.testIndex)) {\n\t\t\treturn savedVariation.variation;\n\t\t}\n\t}\n\n\treturn \"unset\";\n}\n\nfunction getVariationName(variation, testData) {\n\tfor (const variationData of testData.variations) {\n\t\tif (variationData.id === variation) {\n\t\t\treturn variationData.name;\n\t\t}\n\t}\n\n\treturn \"unknown\";\n}\n\n\nfunction selectRandomVariation(testData) {\n\tconst variations = testData.variations;\n\n\tlet maxWeight = 0;\n\n\tfor (const variation of variations) {\n\t\tmaxWeight += strToInt(variation.weight);\n\t}\n\n\tconst randomWeight = generateRandom(0, maxWeight - 1);\n\n\tlet currentWeight = 0;\n\n\tfor (const variation of variations) {\n\t\tcurrentWeight += strToInt(variation.weight);\n\t\tif (randomWeight < currentWeight) {\n\t\t\treturn variation.id;\n\t\t}\n\t}\n\n\treturn \"unset\";\n}\n\nfunction getDaysFrom1970(dateString) {\n\tconst dateParts = dateString.split('/');\n\n\tif (dateParts.length !== 3) {\n\t\treturn 0;\n\t}\n\n\tconst month = strToInt(dateParts[0]);\n\tconst day = strToInt(dateParts[1]);\n\tconst year = strToInt(dateParts[2]);\n\n\t// Days per month (assuming non-leap year for February)\n\tconst daysPerMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n\t// Calculate the total number of days from the Unix Epoch to the given date\n\tlet totalDays = 0;\n\n\tfor (let y = 1970; y < year; y++) {\n\t\ttotalDays += isLeapYear(y) ? 366 : 365;\n\t}\n\n\tfor (let m = 1; m < month; m++) {\n\n\t\ttotalDays += daysPerMonth[m];\n\n\n\t\tif (m === 2 && isLeapYear(year)) {\n\t\t\ttotalDays += 1; // February has 29 days in a leap year\n\t\t}\n\n\t}\n\ttotalDays += day - 1; // Subtract 1 as the Unix Epoch starts from January 1, 1970\n\n\treturn totalDays;\n}\n\nfunction isLeapYear(year) {\n\treturn (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n/*--includeend--*/\n\n// Call data.gtmOnSuccess when the tag is finished.\ndata.gtmOnSuccess();\n\n\n___WEB_PERMISSIONS___\n\n[\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"logging\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"environments\",\n          \"value\": {\n            \"type\": 1,\n            \"string\": \"all\"\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  },\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"access_local_storage\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"keys\",\n          \"value\": {\n            \"type\": 2,\n            \"listItem\": [\n              {\n                \"type\": 3,\n                \"mapKey\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"key\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"read\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"write\"\n                  }\n                ],\n                \"mapValue\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"nantu_tests\"\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": true\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": true\n                  }\n                ]\n              }\n            ]\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  },\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"get_cookies\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"cookieAccess\",\n          \"value\": {\n            \"type\": 1,\n            \"string\": \"specific\"\n          }\n        },\n        {\n          \"key\": \"cookieNames\",\n          \"value\": {\n            \"type\": 2,\n            \"listItem\": [\n              {\n                \"type\": 1,\n                \"string\": \"nantu_mode\"\n              },\n              {\n                \"type\": 1,\n                \"string\": \"_ga\"\n              }\n            ]\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  },\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"get_url\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"queriesAllowed\",\n          \"value\": {\n            \"type\": 1,\n            \"string\": \"any\"\n          }\n        },\n        {\n          \"key\": \"urlParts\",\n          \"value\": {\n            \"type\": 1,\n            \"string\": \"specific\"\n          }\n        },\n        {\n          \"key\": \"query\",\n          \"value\": {\n            \"type\": 8,\n            \"boolean\": true\n          }\n        },\n        {\n          \"key\": \"host\",\n          \"value\": {\n            \"type\": 8,\n            \"boolean\": true\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  },\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"set_cookies\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"allowedCookies\",\n          \"value\": {\n            \"type\": 2,\n            \"listItem\": [\n              {\n                \"type\": 3,\n                \"mapKey\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"name\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"domain\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"path\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"secure\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"session\"\n                  }\n                ],\n                \"mapValue\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"nantu_mode\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"*\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"*\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"any\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"any\"\n                  }\n                ]\n              }\n            ]\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  },\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"access_globals\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"keys\",\n          \"value\": {\n            \"type\": 2,\n            \"listItem\": [\n              {\n                \"type\": 3,\n                \"mapKey\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"key\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"read\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"write\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"execute\"\n                  }\n                ],\n                \"mapValue\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"dataLayer\"\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": true\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": true\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  }\n                ]\n              }\n            ]\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  }\n]\n\n\n___TESTS___\n\nscenarios: []\n\n\n___NOTES___\n\nCreated on 7/31/2021, 10:51:07 AM\n\n\n"
            },
            {
                "accountId": "6098026418",
                "containerId": "115676190",
                "templateId": "12",
                "name": "Nantu Target Selector",
                "fingerprint": "1690921170344",
                "templateData": "___INFO___\n\n{\n  \"type\": \"MACRO\",\n  \"id\": \"cvt_temp_public_id\",\n  \"version\": 1,\n  \"securityGroups\": [],\n  \"displayName\": \"Nantu Target Selector\",\n  \"description\": \"Variable that helps to select the target\",\n  \"containerContexts\": [\n    \"WEB\"\n  ]\n}\n\n\n___TEMPLATE_PARAMETERS___\n\n[\n  {\n    \"type\": \"GROUP\",\n    \"name\": \"qa_mode_group\",\n    \"displayName\": \"QA Mode\",\n    \"groupStyle\": \"NO_ZIPPY\",\n    \"subParams\": [\n      {\n        \"type\": \"CHECKBOX\",\n        \"name\": \"qa_mode\",\n        \"checkboxText\": \"Run only when QA Mode is enabled\",\n        \"simpleValueType\": true\n      }\n    ]\n  },\n  {\n    \"type\": \"GROUP\",\n    \"name\": \"device_label_group\",\n    \"displayName\": \"Device Types\",\n    \"groupStyle\": \"NO_ZIPPY\",\n    \"subParams\": []\n  },\n  {\n    \"type\": \"CHECKBOX\",\n    \"name\": \"desktop\",\n    \"checkboxText\": \"Enable for Desktop\",\n    \"simpleValueType\": true,\n    \"defaultValue\": true,\n    \"alwaysInSummary\": false\n  },\n  {\n    \"type\": \"GROUP\",\n    \"name\": \"desktop_group\",\n    \"displayName\": \"Targeted Desktop Browsers\",\n    \"groupStyle\": \"ZIPPY_CLOSED\",\n    \"subParams\": [\n      {\n        \"type\": \"GROUP\",\n        \"name\": \"chrome_desktop_group\",\n        \"displayName\": \"Chrome\",\n        \"groupStyle\": \"NO_ZIPPY\",\n        \"subParams\": [\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"chrome_desktop\",\n            \"checkboxText\": \"Enable\",\n            \"simpleValueType\": true,\n            \"defaultValue\": true\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"chrome_desktop_version\",\n            \"displayName\": \"Minimum Version\",\n            \"simpleValueType\": true,\n            \"defaultValue\": 90\n          }\n        ]\n      },\n      {\n        \"type\": \"GROUP\",\n        \"name\": \"safari_desktop_group\",\n        \"displayName\": \"Safari\",\n        \"groupStyle\": \"NO_ZIPPY\",\n        \"subParams\": [\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"safari_desktop\",\n            \"checkboxText\": \"Enable\",\n            \"simpleValueType\": true,\n            \"defaultValue\": true\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"safari_desktop_version\",\n            \"displayName\": \"Minimum Version\",\n            \"simpleValueType\": true,\n            \"defaultValue\": 14\n          }\n        ]\n      },\n      {\n        \"type\": \"GROUP\",\n        \"name\": \"edge_desktop_group\",\n        \"displayName\": \"Edge\",\n        \"groupStyle\": \"NO_ZIPPY\",\n        \"subParams\": [\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"edge_desktop\",\n            \"checkboxText\": \"Enable\",\n            \"simpleValueType\": true,\n            \"defaultValue\": true\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"edge_desktop_version\",\n            \"displayName\": \"Minimum Version\",\n            \"simpleValueType\": true,\n            \"defaultValue\": 90\n          }\n        ]\n      },\n      {\n        \"type\": \"GROUP\",\n        \"name\": \"firefox_desktop_group\",\n        \"displayName\": \"Firefox\",\n        \"groupStyle\": \"NO_ZIPPY\",\n        \"subParams\": [\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"firefox_desktop\",\n            \"checkboxText\": \"Enable\",\n            \"simpleValueType\": true,\n            \"defaultValue\": true\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"firefox_desktop_version\",\n            \"displayName\": \"Minimum Version\",\n            \"simpleValueType\": true,\n            \"defaultValue\": 80\n          }\n        ]\n      },\n      {\n        \"type\": \"GROUP\",\n        \"name\": \"opera_desktop_group\",\n        \"displayName\": \"Opera\",\n        \"groupStyle\": \"NO_ZIPPY\",\n        \"subParams\": [\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"opera_desktop\",\n            \"checkboxText\": \"Enable\",\n            \"simpleValueType\": true\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"opera_desktop_version\",\n            \"displayName\": \"Minimum Version\",\n            \"simpleValueType\": true,\n            \"defaultValue\": 80\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"type\": \"CHECKBOX\",\n    \"name\": \"tablet\",\n    \"checkboxText\": \"Enable for Tablet\",\n    \"simpleValueType\": true,\n    \"alwaysInSummary\": false\n  },\n  {\n    \"type\": \"GROUP\",\n    \"name\": \"tablet_group\",\n    \"displayName\": \"Targeted Tablet Browsers\",\n    \"groupStyle\": \"ZIPPY_CLOSED\",\n    \"subParams\": [\n      {\n        \"type\": \"GROUP\",\n        \"name\": \"safari_tablet_group\",\n        \"displayName\": \"Safari\",\n        \"groupStyle\": \"NO_ZIPPY\",\n        \"subParams\": [\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"safari_ipad\",\n            \"checkboxText\": \"Enable\",\n            \"simpleValueType\": true,\n            \"defaultValue\": true\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"safari_ipad_version\",\n            \"displayName\": \"Minimum Version\",\n            \"simpleValueType\": true,\n            \"defaultValue\": 14\n          }\n        ]\n      },\n      {\n        \"type\": \"GROUP\",\n        \"name\": \"chrome_android_group\",\n        \"displayName\": \"Chrome Android\",\n        \"groupStyle\": \"NO_ZIPPY\",\n        \"subParams\": [\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"chrome_android\",\n            \"checkboxText\": \"Enable\",\n            \"simpleValueType\": true,\n            \"defaultValue\": true\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"chrome_android_version\",\n            \"displayName\": \"Minimum Version\",\n            \"simpleValueType\": true,\n            \"defaultValue\": 90\n          }\n        ]\n      },\n      {\n        \"type\": \"GROUP\",\n        \"name\": \"chrome_ipad_group\",\n        \"displayName\": \"Chrome iOS\",\n        \"groupStyle\": \"NO_ZIPPY\",\n        \"subParams\": [\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"chrome_ipad\",\n            \"checkboxText\": \"Enable\",\n            \"simpleValueType\": true,\n            \"defaultValue\": true\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"chrome_ipad_version\",\n            \"displayName\": \"Minimum Version\",\n            \"simpleValueType\": true,\n            \"defaultValue\": 90\n          }\n        ]\n      },\n      {\n        \"type\": \"GROUP\",\n        \"name\": \"firefox_tablet_group\",\n        \"displayName\": \"Firefox\",\n        \"groupStyle\": \"NO_ZIPPY\",\n        \"subParams\": [\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"firefox_tablet\",\n            \"checkboxText\": \"Enable\",\n            \"simpleValueType\": true\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"firefox_tablet_version\",\n            \"displayName\": \"Minimum Version\",\n            \"simpleValueType\": true,\n            \"defaultValue\": 80\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"type\": \"CHECKBOX\",\n    \"name\": \"mobile\",\n    \"checkboxText\": \"Enable for Mobile\",\n    \"simpleValueType\": true,\n    \"alwaysInSummary\": false\n  },\n  {\n    \"type\": \"GROUP\",\n    \"name\": \"mobile_group\",\n    \"displayName\": \"Targeted Mobile Browsers\",\n    \"groupStyle\": \"ZIPPY_CLOSED\",\n    \"subParams\": [\n      {\n        \"type\": \"GROUP\",\n        \"name\": \"safari_mobile_group\",\n        \"displayName\": \"Safari\",\n        \"groupStyle\": \"NO_ZIPPY\",\n        \"subParams\": [\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"safari_mobile\",\n            \"checkboxText\": \"Enable\",\n            \"simpleValueType\": true,\n            \"defaultValue\": true\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"safari_mobile_version\",\n            \"displayName\": \"Minimum Version\",\n            \"simpleValueType\": true,\n            \"defaultValue\": 14\n          }\n        ]\n      },\n      {\n        \"type\": \"GROUP\",\n        \"name\": \"chrome_mobile_group\",\n        \"displayName\": \"Chrome Android\",\n        \"groupStyle\": \"NO_ZIPPY\",\n        \"subParams\": [\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"chrome_android_mobile\",\n            \"checkboxText\": \"Enable\",\n            \"simpleValueType\": true,\n            \"defaultValue\": true\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"chrome_android_mobile_version\",\n            \"displayName\": \"Minimum Version\",\n            \"simpleValueType\": true,\n            \"defaultValue\": 90\n          }\n        ]\n      },\n      {\n        \"type\": \"GROUP\",\n        \"name\": \"chrome_mobile_ios_group\",\n        \"displayName\": \"Chrome iOS\",\n        \"groupStyle\": \"NO_ZIPPY\",\n        \"subParams\": [\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"chrome_iphone\",\n            \"checkboxText\": \"Enable\",\n            \"simpleValueType\": true,\n            \"defaultValue\": true\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"chrome_iphone_version\",\n            \"displayName\": \"Minimum Version\",\n            \"simpleValueType\": true,\n            \"defaultValue\": 90\n          }\n        ]\n      },\n      {\n        \"type\": \"GROUP\",\n        \"name\": \"firefox_mobile_group\",\n        \"displayName\": \"Firefox\",\n        \"groupStyle\": \"NO_ZIPPY\",\n        \"subParams\": [\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"firefox_mobile\",\n            \"checkboxText\": \"Enable\",\n            \"simpleValueType\": true\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"firefox_mobile_version\",\n            \"displayName\": \"Minimum Version\",\n            \"simpleValueType\": true,\n            \"defaultValue\": 80\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"type\": \"GROUP\",\n    \"name\": \"visitor_sources_group\",\n    \"displayName\": \"Visitor Sources\",\n    \"groupStyle\": \"NO_ZIPPY\",\n    \"subParams\": [\n      {\n        \"type\": \"CHECKBOX\",\n        \"name\": \"all_sources\",\n        \"checkboxText\": \"Target Users from all Sources\",\n        \"simpleValueType\": true,\n        \"defaultValue\": true\n      },\n      {\n        \"type\": \"GROUP\",\n        \"name\": \"visitors_sources_details\",\n        \"displayName\": \"\",\n        \"groupStyle\": \"ZIPPY_OPEN\",\n        \"subParams\": [\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"visitors_organic\",\n            \"checkboxText\": \"Target Organic Visitors\",\n            \"simpleValueType\": true,\n            \"defaultValue\": true\n          },\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"visitors_paid\",\n            \"checkboxText\": \"Target Paid Visitors\",\n            \"simpleValueType\": true,\n            \"defaultValue\": true\n          },\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"visitors_direct\",\n            \"checkboxText\": \"Target Direct Visitors\",\n            \"simpleValueType\": true,\n            \"defaultValue\": true\n          },\n          {\n            \"type\": \"CHECKBOX\",\n            \"name\": \"visitors_email\",\n            \"checkboxText\": \"Target Email Visitors\",\n            \"simpleValueType\": true,\n            \"defaultValue\": true\n          }\n        ],\n        \"enablingConditions\": [\n          {\n            \"paramName\": \"all_sources\",\n            \"paramValue\": true,\n            \"type\": \"NOT_EQUALS\"\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"type\": \"GROUP\",\n    \"name\": \"urls_group\",\n    \"displayName\": \"URLs\",\n    \"groupStyle\": \"NO_ZIPPY\",\n    \"subParams\": [\n      {\n        \"type\": \"CHECKBOX\",\n        \"name\": \"urls_enabled\",\n        \"checkboxText\": \"Run on specific urls\",\n        \"simpleValueType\": true\n      },\n      {\n        \"type\": \"PARAM_TABLE\",\n        \"name\": \"urls_table\",\n        \"displayName\": \"URLs List\",\n        \"paramTableColumns\": [\n          {\n            \"param\": {\n              \"type\": \"SELECT\",\n              \"name\": \"url_type\",\n              \"displayName\": \"URL Section\",\n              \"macrosInSelect\": false,\n              \"selectItems\": [\n                {\n                  \"value\": \"href\",\n                  \"displayValue\": \"Page URL\"\n                },\n                {\n                  \"value\": \"path\",\n                  \"displayValue\": \"Page Path\"\n                }\n              ],\n              \"simpleValueType\": true\n            },\n            \"isUnique\": false\n          },\n          {\n            \"param\": {\n              \"type\": \"SELECT\",\n              \"name\": \"url_condition\",\n              \"displayName\": \"Condition Type\",\n              \"macrosInSelect\": false,\n              \"selectItems\": [\n                {\n                  \"value\": \"equals\",\n                  \"displayValue\": \"Equals\"\n                },\n                {\n                  \"value\": \"contains\",\n                  \"displayValue\": \"Contains\"\n                },\n                {\n                  \"value\": \"starts\",\n                  \"displayValue\": \"Starts With\"\n                },\n                {\n                  \"value\": \"ends\",\n                  \"displayValue\": \"Ends With\"\n                }\n              ],\n              \"simpleValueType\": true\n            },\n            \"isUnique\": false\n          },\n          {\n            \"param\": {\n              \"type\": \"TEXT\",\n              \"name\": \"url_value\",\n              \"displayName\": \"URL\",\n              \"simpleValueType\": true\n            },\n            \"isUnique\": true\n          }\n        ],\n        \"enablingConditions\": [\n          {\n            \"paramName\": \"urls_enabled\",\n            \"paramValue\": true,\n            \"type\": \"EQUALS\"\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"type\": \"GROUP\",\n    \"name\": \"elements_group\",\n    \"displayName\": \"Page Elements\",\n    \"groupStyle\": \"NO_ZIPPY\",\n    \"subParams\": [\n      {\n        \"type\": \"CHECKBOX\",\n        \"name\": \"element_enable\",\n        \"checkboxText\": \"Run only if page contains specific element\",\n        \"simpleValueType\": true\n      },\n      {\n        \"type\": \"TEXT\",\n        \"name\": \"element_selector\",\n        \"displayName\": \"CSS selector of element\",\n        \"simpleValueType\": true,\n        \"enablingConditions\": [\n          {\n            \"paramName\": \"element_enable\",\n            \"paramValue\": true,\n            \"type\": \"EQUALS\"\n          }\n        ],\n        \"valueValidators\": [\n          {\n            \"type\": \"NON_EMPTY\"\n          }\n        ]\n      }\n    ]\n  }\n]\n\n\n___SANDBOXED_JS_FOR_WEB_TEMPLATE___\n\nconst queryPermission = require('queryPermission');\nconst copyFromWindow = require('copyFromWindow');\nconst makeInteger = require('makeInteger');\nconst getCookieValues = require('getCookieValues');\nconst getUrl = require('getUrl');\n//const log = require('logToConsole');\n\nconst nantuModeCookieName = 'nantu_mode';\nconst nantuModeQueryVariableName = 'nantu_mode';\n\nvar return_value = 'yes';\n\nvar nantu_device = getVariableValue('nantu_device');\nvar nantu_browser = getVariableValue('nantu_browser');\nvar nantu_browser_type = getVariableValue('nantu_browser_type');\nvar nantu_browser_version = getVariableValue('nantu_browser_version');\n\nvar nantu_source = getVariableValue('nantu_source');\nvar nantu_medium = getVariableValue('nantu_medium');\nvar nantu_campaign = getVariableValue('nantu_campaign');\n\nfunction getTotalElements(selector) {\n\tif (queryPermission('access_globals', 'read', 'nantuGetTotalElements')) {\n\t\tconst nantuGetTotalElements = copyFromWindow('nantuGetTotalElements');\n\n\t\treturn nantuGetTotalElements(selector);\n\t}\n\n\treturn 0;\n}\n\nfunction getVariableValue(variableName) {\n\tif (queryPermission('access_globals', 'read', variableName)) {\n\t\treturn copyFromWindow(variableName);\n\t}\n\n\tif(variableName === 'nantu_browser_version') {\n\t\treturn 0;\n\t}\n\n\treturn \"unknown\";\n}\n\n//Check if the user is in QA mode\n//QA Mode is set using a cookie or the query parameter nantu_mode=qa\nfunction isInQAMode() {\n\tif (queryPermission('get_cookies', nantuModeCookieName)) {\n\t\tconst nantuModeCookie = getCookieValues(nantuModeCookieName).join('');\n\n\t\tif (nantuModeCookie === \"qa\" || hasQAQuery()) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction hasQAQuery() {\n\tif (queryPermission('get_url', 'query')) {\n\t\tconst nantuModeQuery = getUrl('query');\n\n\t\tif (nantuModeQuery.indexOf(nantuModeQueryVariableName + \"=qa\") !== -1) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction isAllowedURL(type, condition, value) {\n\tif (queryPermission('get_url', type)) {\n\t\tvar url = getUrl(type);\n\n\t\tif (condition === 'contains') {\n\t\t\tif (url.indexOf(value) !== -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (condition === 'equals') {\n\t\t\tif (url === value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (condition === 'starts') {\n\t\t\tif (url.indexOf(value) === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (condition === 'ends') {\n\t\t\tif (url.indexOf(value) === url.length - value.length) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\nif (data.qa_mode === true && isInQAMode() === false) {\n//log('QA Mode is not enabled');\n\treturn 'no';\n}\n\nif (nantu_device === 'unknown' || nantu_browser === 'unknown' || nantu_browser_type === 'unknown' || nantu_browser_version === 0) {\n//log('Unknown device or browser');\n\treturn 'no';\n}\n\nif (nantu_device === 'desktop') {\n\tif (data.desktop === false) {\n//log('Desktop is not allowed');\n\t\treturn 'no';\n\t}\n\n\tif (nantu_browser === 'safari') {\n\t\tif (data.safari_desktop === false) {\n//log('Safari desktop is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\n\t\tif (nantu_browser_version < makeInteger(data.safari_desktop_version)) {\n//log('Safari desktop version is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\t}\n\n\tif (nantu_browser === 'chrome') {\n\t\tif (data.chrome_desktop === false) {\n//log('Chrome desktop is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\n\t\tif (nantu_browser_version < makeInteger(data.chrome_desktop_version)) {\n//log('Chrome desktop version is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\t}\n\n\n\tif (nantu_browser === 'firefox') {\n\t\tif (data.firefox_desktop === false) {\n//log('Firefox desktop is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\n\t\tif (nantu_browser_version < makeInteger(data.firefox_desktop_version)) {\n//log('Firefox desktop version is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\t}\n\n\tif (nantu_browser === 'edge') {\n\t\tif (data.edge_desktop === false) {\n//log('Edge desktop is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\n\t\tif (nantu_browser_version < makeInteger(data.edge_desktop_version)) {\n//log('Edge desktop version is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\t}\n\n\tif (nantu_browser === 'opera') {\n\t\tif (data.opera_desktop === false) {\n//log('Opera desktop is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\n\t\tif (nantu_browser_version < makeInteger(data.opera_desktop_version)) {\n//log('Opera desktop version is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\t}\n}\n\nif (nantu_device === 'tablet') {\n\tif (data.tablet === false) {\n//log('Tablet is not allowed');\n\t\treturn 'no';\n\t}\n\n\tif (nantu_browser === 'safari') {\n\t\tif (data.safari_ipad === false) {\n//log('Safari iPad is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\n\t\tif (nantu_browser_version < makeInteger(data.safari_ipad_version)) {\n//log('Safari iPad version is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\t}\n\n\tif (nantu_browser === 'chrome') {\n\t\tif (data.chrome_android === false) {\n//log('Chrome Tablet is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\n\t\tif (nantu_browser_version < makeInteger(data.chrome_android_version)) {\n//log('Chrome Tablet version is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\t}\n\n\tif (nantu_browser === 'firefox') {\n\t\tif (data.firefox_tablet === false) {\n//log('Firefox Tablet is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\n\t\tif (nantu_browser_version < makeInteger(data.firefox_tablet_version)) {\n//log('Firefox Tablet version is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\t}\n}\n\nif (nantu_device === 'mobile') {\n\tif (data.mobile === false) {\n//log('Mobile is not allowed');\n\t\treturn 'no';\n\t}\n\n\tif (nantu_browser === 'safari') {\n\t\tif (data.safari_mobile === false) \n\t\t{\n//log('Safari mobile is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\n\t\tif (nantu_browser_version < makeInteger(data.safari_mobile_version)) {\n//log('Safari mobile version is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\t}\n\n\tif (nantu_browser === 'chrome') {\n\t\tif (data.chrome_android_mobile === false) {\n//log('Chrome Android mobile is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\n\t\tif (nantu_browser_version < makeInteger(data.chrome_android_mobile_version)) {\n//log('Chrome Android mobile version is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\n\t\tif (nantu_browser_type === 'safari') {\n\t\t\tif (data.chrome_iphone === false) {\n//log('Chrome iPhone is not allowed');\n\t\t\t\treturn 'no';\n\t\t\t}\n\n\t\t\tif (nantu_browser_version < makeInteger(data.chrome_iphone_version)) {\n//log('Chrome iPhone version is not allowed');\n\t\t\t\treturn 'no';\n\t\t\t}\n\t\t}\t\n\t}\n\n\tif (nantu_browser === 'firefox') {\n\t\tif (data.firefox_mobile === false) {\n//log('Firefox mobile is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\n\t\tif (nantu_browser_version < makeInteger(data.firefox_mobile_version)) {\n//log('Firefox mobile version is not allowed');\n\t\t\treturn 'no';\n\t\t}\n\t}\n}\n\nif (data.all_sources === false) {\n\tif (nantu_medium === 'unknown') {\n//log('Medium unknown not allowed');\n\t\treturn 'no';\n\t}\n\n\tif (nantu_medium === 'organic' && data.visitors_organic === false) {\n//log('Organic not allowed');\n\t\treturn 'no';\n\t}\n\n\tif (nantu_medium === 'cpc' && data.visitors_paid === false) {\n//log('Paid not allowed');\n\t\treturn 'no';\n\t}\n\n\tif (nantu_medium === 'direct' && data.visitors_direct === false) {\n//log('Direct not allowed');\n\t\treturn 'no';\n\t}\n\n\tif (nantu_medium === 'email' && data.visitors_email === false) {\n//log('Email not allowed');\n\t\treturn 'no';\n\t}\n}\n\nif (data.urls_enabled === true) {\n\treturn_value = 'no';\n\n\tfor (let i = 0; i < data.urls_table.length; i++) {\n\t\tlet url_rule = data.urls_table[i];\n\n\t\tif (isAllowedURL(url_rule.url_type, url_rule.url_condition, url_rule.url_value) === true) {\n\t\t\treturn_value = 'yes';\n\t\t}\n\t}\n}\n\nif (data.element_enable === true) {\n\tif (getTotalElements(data.element_selector) > 0) {\n\t\treturn 'yes';\n\t}\n\n\treturn 'no';\n}\n\nreturn return_value;\n\n\n___WEB_PERMISSIONS___\n\n[\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"access_globals\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"keys\",\n          \"value\": {\n            \"type\": 2,\n            \"listItem\": [\n              {\n                \"type\": 3,\n                \"mapKey\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"key\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"read\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"write\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"execute\"\n                  }\n                ],\n                \"mapValue\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"nantu_device\"\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": true\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  }\n                ]\n              },\n              {\n                \"type\": 3,\n                \"mapKey\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"key\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"read\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"write\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"execute\"\n                  }\n                ],\n                \"mapValue\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"nantu_browser\"\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": true\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  }\n                ]\n              },\n              {\n                \"type\": 3,\n                \"mapKey\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"key\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"read\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"write\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"execute\"\n                  }\n                ],\n                \"mapValue\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"nantu_browser_type\"\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": true\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  }\n                ]\n              },\n              {\n                \"type\": 3,\n                \"mapKey\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"key\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"read\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"write\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"execute\"\n                  }\n                ],\n                \"mapValue\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"nantu_browser_version\"\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": true\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  }\n                ]\n              },\n              {\n                \"type\": 3,\n                \"mapKey\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"key\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"read\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"write\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"execute\"\n                  }\n                ],\n                \"mapValue\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"nantu_source\"\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": true\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  }\n                ]\n              },\n              {\n                \"type\": 3,\n                \"mapKey\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"key\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"read\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"write\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"execute\"\n                  }\n                ],\n                \"mapValue\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"nantu_medium\"\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": true\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  }\n                ]\n              },\n              {\n                \"type\": 3,\n                \"mapKey\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"key\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"read\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"write\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"execute\"\n                  }\n                ],\n                \"mapValue\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"nantu_campaign\"\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": true\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  }\n                ]\n              },\n              {\n                \"type\": 3,\n                \"mapKey\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"key\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"read\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"write\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"execute\"\n                  }\n                ],\n                \"mapValue\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"nantuGetTotalElements\"\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": true\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": false\n                  },\n                  {\n                    \"type\": 8,\n                    \"boolean\": true\n                  }\n                ]\n              }\n            ]\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  },\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"get_cookies\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"cookieAccess\",\n          \"value\": {\n            \"type\": 1,\n            \"string\": \"specific\"\n          }\n        },\n        {\n          \"key\": \"cookieNames\",\n          \"value\": {\n            \"type\": 2,\n            \"listItem\": [\n              {\n                \"type\": 1,\n                \"string\": \"nantu_mode\"\n              }\n            ]\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  },\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"get_url\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"urlParts\",\n          \"value\": {\n            \"type\": 1,\n            \"string\": \"any\"\n          }\n        },\n        {\n          \"key\": \"queriesAllowed\",\n          \"value\": {\n            \"type\": 1,\n            \"string\": \"any\"\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  }\n]\n\n\n___TESTS___\n\nscenarios: []\n\n\n___NOTES___\n\n\n\n\n"
            }
        ]
    }
}